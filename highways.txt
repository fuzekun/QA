	define Module Highway
	{
		ModuleID = 130;

		define Course Zwischen
		{
			NodeID = 10;
			CrossSection = Highway;


			Straight(5000);

			HeightProfile =
			{
				# Steigung/Gef鋖le, L鋘ge, Ausrundungshalbmesser

			    (0.0, 5000.0, 2400)

			};

			LandscapeTypeRight Wooded {
				Gradient = 0.1;
				GradientEnd = 0.2;
				TreeDensity = 3;
				OverlayDensity = 1;
				};

				# Baumgruppen
				LandscapeTypeExtra Wooded {
				Left = false;
				TreeDensity = 50;
				MinObjdist = 30;
				MaxObjdist = 60;
				MinObjpos = 40;
				MaxObjpos = 80;
				};
		
				#Grass am Boden
				LandscapeTypeExtra Grassland
				{
				Left = false;

				MinObjdist = 2.7;
				MaxObjdist = 25;
				
				};
				#ras am Stra遝nrand
				Object Grassland
				{
				Orientation = Onwards; # rechts
				YOffset = 17; # plus = rechts
				Distance = 4.5;
				
				};
				LandscapeTypeLeft Farmed
				{
				Height = 1;
				Ripple = 0.5;
				Gradient = 0.1;

				OverlayDensity = 1;
				MaxObjdist = 250;
				WaySetback = (7, 2);
				 FieldSetback = (8, 0.5); # oder: (2.7, 0)
				};
				# Dekoration des Stra遝nrands links
				Object Meadow
				{
				Orientation = Towards;
				YOffset = -17;
				Distance = 4.5;
				};
				#Mittelstreifen
				Object GrasslandHighway
				{
				Orientation = Onwards;
				YOffset = 0;
				Distance = 4.5;
				};
				LandscapeTypeExtra RoadsideBush {
				Left = true;
				MinObjdist = -17.8;
				MaxObjdist = -15.2;
				ObjDensity = 0.5;
				};
		};


		define Course Anfahrt1
		{
			NodeID = 510;
			CrossSection = Highway;

			Bend(2500, -1200);
			Straight(4500);
			Bend(2500, 1800);
			Straight(2500);
			Bend(2500, 1000);
			Straight(2500);
			Bend(2500, -1000);
			Straight(4000);
			Bend(2500, 1600);


			HeightProfile =
			{
			    (0.0, 5000.0, 2400),
			    (-1.0, 3000.0, 1000),
			    (1.0, 3000.0, 1000),
			    (0.0, 15000.0, 2400)
			};

			Objects =
			{
				(sign.sign200_274_130, 20, 16.12),
				(sign.sign200_274_130, 20, -0.2),
				(sign.sign200_274_130, 600, 16.1),
				(sign.sign200_274_130, 600, -0.2),
				(sign.sign200_124, 800, 16.1),
				(sign.sign200_124, 800, -0.2),
				(sign.sign200_274_130, 1400, 16.1),
				(sign.sign200_274_130, 1400, -0.2),
				(sign.sign200_274_130, 2000, 16.1),
				(sign.sign200_274_130, 2000, -0.2),
				(sign.sign200_274_130, 2400, 16.1),
				(sign.sign200_274_130, 2400, -0.2)
			};


			LandscapeTypeRight Hedge
			{
				Height = (2, 4);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				MinObjdist = 25;
				MaxObjdist = 150;
				MaxObjpos=450;
			};
			LandscapeTypeExtra Wooded {
				Left = false;
				TreeDensity = 50;
				MinObjdist = 30;
				MaxObjdist = 60;
				MinObjpos = 450;
				
				};

			LandscapeTypeExtra Grassland
				{
				Left = false;

				MinObjdist = 2.7;
				MaxObjdist = 25;
				MinObjpos = 0;
				};
			
			Object Grassland
				{
				Orientation = Onwards; # rechts
				YOffset = 17; # plus = rechts
				Distance = 4.5;
				Start = 0;
				};

			
			LandscapeTypeLeft Forest
			{
			Gradient = -0.1;
			Height = 3;
			Ripple = 2;

			MinObjdist = 2.5;
			MaxObjdist = 140;
			# MinObjpos = 0;
			MaxObjpos = 450;
			};
			LandscapeTypeExtra Farmed
				{
				Left = true;
				
				OverlayDensity = 1;
				FieldSetback = (8, 0.5); # oder: (2.7, 0)
				MinObjdist = 2.7;
				MaxObjdist = 250;
				MinObjpos = 450;
				WaySetback = (7, 2);
				};
				LandscapeTypeExtra Wooded
				{
				Left = true;
				
				TreeDensity=50;
				MinObjdist = 250;
				MaxObjdist = 350;
				MinObjpos = 450;
				};
				
				Object Meadow
				{
				Orientation = Towards;
				YOffset = -19.5;
				Distance = 4.5;
				Start=450;
				};
			Object ForestPlants
			{
			Orientation = Towards; # links
			YOffset = -17; # links = minus
			Distance = 4.5;
			Start = 0;
			End = 450;
			};
			# Deko mitte
			Object GrasslandHighway
			{
			Orientation = Onwards;
			YOffset = 0;
			Distance = 10;
			};
			LandscapeTypeExtra RoadsideBush {
			Left = true;
			MinObjdist = -17.8;
				MaxObjdist = -15.2;
			ObjDensity = 0.5;
			};
		};

		define Course Anfahrt2
		{
			NodeID = 513;
			CrossSection = Highway;

			Straight(7200);
			Bend(4800, -1800);
			Straight(8400);
			Bend(6000, 800);
			Straight(12000);
			Bend(4800, -1400);
			Straight(5200);
			Bend(4800, 2000);
			Straight(7200);

			HeightProfile =
			{
			    (0.0, 8000.0, 2400),
			    (-1.0, 7200.0, 1000),
			    (1.0, 7200.0, 1000),
				(0.0, 38000.0, 2400)


			};

			Objects =
			{
				(sign.sign200_274_130, 20, 16.1),
				(sign.sign200_274_130, 20, -0.2),
				(sign.sign200_274_130, 600, 16.1),
				(sign.sign200_274_130, 600, -0.2),
				(sign.sign200_124, 800, 16.1),
				(sign.sign200_124, 800, -0.2),
				(sign.sign200_274_130, 1400, 16.1),
				(sign.sign200_274_130, 1400, -0.2),
				(sign.sign200_274_130, 2000, 16.1),
				(sign.sign200_274_130, 2000, -0.2),
				(sign.sign200_274_130, 2400, 16.1),
				(sign.sign200_274_130, 2400, -0.2)


			};


			LandscapeTypeRight Meadows
				{
				Height = 1;
				Ripple = 0.5;
				Gradient = 0.1;

				OverlayDensity = 1;
				TreeDensity = (1, 2);
				GadgetDensity = (1, 3);
				MaxObjdist = 250;
				WaySetback = (7, 2);
				Maxobjpos=600;
				};
				# Dekoration des Stra遝nrands links
				Object Meadow
				{
				Orientation = Towards;
				YOffset = 17.8;
				Distance = 4.5;
				End=600;
				};
				
				LandscapeTypeExtra Wooded
				{
					Left = false;
				TreeDensity = 50;
				MinObjdist = 30;
				MaxObjdist = 60;
				MinObjpos = 600;
				MaxObjpos=800;

					
				};
				LandscapeTypeExtra LeafForest
				{
				Left = false;
				
				MinObjdist = 2.5;
				MaxObjdist = 60;
				MinObjpos = 800;
				MaxObjpos=1000;

					
				};
				Object ForestPlants
				{
				Orientation = Onwards; # links
				YOffset = 17.8; # links = minus
				Distance = 4.5;
				Start = 800;
				End = 1000;
				};
				
				
				LandscapeTypeExtra Farmed
				{
				Left = false;
				
				OverlayDensity = 1;
				MaxObjdist = 250;
				FieldSetback = (8, 0.5); # oder: (2.7, 0)
				MinObjpos = 1000;
				MaxObjpos=1500;
				WaySetback = (7, 2);

					
				};
				Object Meadow
				{
				Orientation = Onwards;
				YOffset = 17.8;
				Distance = 4.5;
				Start=1000;
				End=1500;
				};
					LandscapeTypeExtra Hedge
				{
				Left = false;
				
				MinObjdist=25;
				MaxObjdist=100;
				MinObjpos = 1500;
				MaxObjpos=1900;
				
				

					
				};
					LandscapeTypeExtra Vineyard
				{
				Left = false;
				
				MinObjdist=25;
				MaxObjdist=100;
				MinObjpos = 1900;
				};
				LandscapeTypeExtra Grassland
				{
				Left = false;

				MinObjdist = 2.7;
				MaxObjdist = 25;
				MinObjpos = 1500;
				
				};
				Object Grassland
				{
				Orientation = Onwards; # rechts
				YOffset = 17.8; # plus = rechts
				Distance = 4.5;
				Start = 1500;
				};
				
				LandscapeTypeExtra Grassland
				{
				Left = false;

				MinObjdist = 2.7;
				MaxObjdist = 25;
				MinObjpos = 600;
				MaxObjpos=800;
				};
				Object Grassland
				{
				Orientation = Onwards; # rechts
				YOffset = 17; # plus = rechts
				Distance = 4.5;
				Start = 600;
				};

			LandscapeTypeLeft Farmed
			{
				Height = (2, 7);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				MinObjdist = 2;
				MaxObjdist = 100;
				WaySetback = 10;
				MaxObjpos=300;
			};
			
			Object Meadow
				{
				Orientation = Towards;
				YOffset = -17;
				Distance = 4.5;
				End=300;
				};
				
				LandscapeTypeExtra LeafForest
				
				{
					Left=true;
				MinObjdist = 2.5;
				MaxObjdist = 140;
				MinObjpos = 300;
				MaxObjpos=1000;

				};
				Object ForestPlants
				{
				Orientation = Towards; # links
				YOffset = -17; # links = minus
				Distance = 4.5;
				Start = 300;
				End=1000;

				};
				LandscapeTypeExtra Grassland
				{
				Left = true;

				MinObjdist = 2.7;
				MaxObjdist = 25;
				MaxObjpos = 300;
				};
				Object Grassland
				{
				Orientation = Towards; # rechts
				YOffset = -17; # plus = rechts
				Distance = 4.5;
				Start = 600;
				};
					LandscapeTypeExtra Vineyard
				{
				Left = true;

				MinObjdist = 5;
				MaxObjdist = 200;
				MinObjpos = 1000;
				MaxObjpos=1950;
				};
				LandscapeTypeExtra Hedge
				{
				Left = true;

				MinObjdist = 5;
				MaxObjdist = 200;
				MinObjpos = 1950;
				};
				LandscapeTypeExtra Grassland
				{
				Left = true;

				MinObjdist = 2.7;
				MaxObjdist = 5;
				MinObjpos = 1000;
				};
				Object Grassland
				{
				Orientation = Towards; # links
				YOffset = -17; # plus = rechts
				Distance = 4.5;
				Start = 1000;
				};
				
			
			# Deko mitte
			Object GrasslandHighway
			{
			Orientation = Onwards;
			YOffset = 0;
			Distance = 10;
			};
			LandscapeTypeExtra RoadsideBush {
			Left = true;
			MinObjdist = -17.8;
				MaxObjdist = -15.2;
			ObjDensity = 0.5;
			};

		};


		define Course Start
		{
			NodeID = 711;
			CrossSection = Highway;

			Straight(50000);

			HeightProfile =
			{
				(0.0, 50000.0, 1000)
			};

			Objects =
			{
				(sign.sign200_274_130, 20, 16.1),
				(sign.sign200_274_130, 20, -0.2)

			};

			LandscapeTypeRight Wooded
			{
				Height = (2, 4);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				TreeDensity = 10;
				MinObjdist = 30;
				MaxObjdist = 150;
			};
			
			LandscapeTypeExtra Forest
			{
			Left = false;

			MinObjdist = 2.7;
			MaxObjdist = 200;
			
			
			};
			LandscapeTypeExtra Grassland
			{
			Left = false;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 0;
			};
			Object Grassland
			{
			Orientation = Onwards; # rechts
			YOffset = 17; # plus = rechts
			Distance = 4.5;
			Start = 0;
			};

           LandscapeTypeLeft Vineyard
			{
				Height = (5, 10);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				MinObjdist = 25;
				MaxObjdist = 250;
			};
			LandscapeTypeExtra Grassland
			{
			Left = true;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 0;
			};
			Object Grassland
			{
			Orientation = Towards; 
			YOffset = -17; # plus = rechts
			Distance = 4.5;
			Start = 0;
			};
			
			# Deko mitte
			Object GrasslandHighway
			{
			Orientation = Onwards;
			YOffset = 0;
			Distance = 10;
			};
			LandscapeTypeExtra RoadsideBush {
			Left = true;
			MinObjdist = -17.8;
				MaxObjdist = -15.2;
			ObjDensity = 0.5;
			};
		};



		define Course Vor 
		{
			NodeID = 712;
			CrossSection = Highway;

			Straight(10000);

			HeightProfile =
			{
				(0.0,10000.0, 10000)
			};

			Objects =
			{
				(sign.sign200_274_130, 20, 16.1),
				(sign.sign200_274_130, 20, -0.2) 

				/*(environment.road.gantry_3, 100),
				(sign.sign200_G_274_03_120, 100, 3),
				(sign.sign200_G_274_03_120, 100, 7),
				(sign.sign200_G_274_03_120, 100, 11),

				(environment.road.gantry_3, 150),
				("sign.G_445_3_500~Hannover~W黵zburg-~Kassel~Estenfeld~Fulda~Rimpar", 150, 7),

				(environment.road.gantry_3, 200),
				(sign.sign200_G_274_03_120, 200, 2.5),
				(sign.sign200_G_113_03,     200, 4.75),
				(sign.sign200_G_274_03_120, 200, 7),
				(sign.sign200_G_113_03,     200, 9.25),
				(sign.sign200_G_274_03_120, 200, 11.5),

				(environment.road.gantry_2, 250),
				("sign.G_446_2~Hannover~Kassel~Fulda", 250, 5),
				("sign.G_446_21~W黵zburg-~Estenfeld~Rimpar", 250, 11),

				(environment.road.gantry_2, 300),
				#(sign.sign200_G_274_03_120, 300, 3),
				#(sign.sign200_G_274_03_120, 300, 7),
				("sign.G_445_2_750~Hannover~W黵zburg-~Kassel~Estenfeld~Fulda~Rimpar", 300, 5),

				(environment.road.gantry_2, 400),
				(sign.sign200_G_274_03_120, 400, 2.5),
				(sign.sign200_G_113_03,     400, 4.75),
				(sign.sign200_G_274_03_120, 400, 7),

				(environment.road.gantry_3, 450),
				("sign.G_446_3~Hannover~Kassel~Fulda", 450, 7),
				("sign.G_446_22~W黵zburg-~Estenfeld~Rimpar", 450, 15),

				(environment.road.gantry_3, 120, 0, 180)*/
			};

			LandscapeTypeRight Wooded
			{
				Height = (2, 4);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				TreeDensity = 15;
				MinObjdist = 20;
				MaxObjdist = 80;
				MaxObjpos=200;
			};
			LandscapeTypeExtra Forest {
				Left = false;
							
				MinObjdist=80;;
				MaxObjdist = 120;
				MaxObjpos=200;
				};
			LandscapeTypeExtra Farmed {
				Left = false;
							
				MinObjdist=2.5;;
				OverlayDensity = 1;
				MaxObjdist = 250;
				FieldSetback = (8, 0.5); # oder: (2.7, 0)
				MinObjpos=200;
				};
				
				Object Meadow #rechts
				{
				Orientation = Onwards;
				YOffset = 17;
				Distance = 4.5;
				Start=200;
				};

			 LandscapeTypeLeft Vineyard
			{
				Height = (5, 10);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				MinObjdist = 10;
				MaxObjdist = 90;
			};
			
			#hinter den Weinbergen sollen sich noch ein paar B鋟me befinden, damit das nicht so abgeschnitten aussieht
			LandscapeTypeExtra Wooded {
				Left = true;
				TreeDensity = 50;				
				MinObjdist = 90;
				MaxObjdist = 180;
				};
				
			LandscapeTypeExtra Grassland
			{
			Left = false;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MaxObjpos = 200;
			};
			Object Grassland
			{
			Orientation = Onwards; # rechts
			YOffset = 17; # plus = rechts
			Distance = 4.5;
			End = 200;
			};
			
			LandscapeTypeExtra Grassland
			{
			Left = true;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 0;
			};
			Object Grassland
			{
			Orientation = Towards; #links
			YOffset = -17; # plus = rechts
			Distance = 4.5;
			Start = 0;
			};
				
				
			# Deko mitte
			Object GrasslandHighway
			{
			Orientation = Onwards;
			YOffset = 0;
			Distance = 10;
			};
			LandscapeTypeExtra RoadsideBush {
			Left = true;
			MinObjdist = -17.8;
				MaxObjdist = -15.2;
			ObjDensity = 0.5;
			};

		};


		define Course Kuppe //Zweiter Course, der vom Start an sichtbar ist. hier muss noch alles ge鋘dert werden
		{
			NodeID = 714;
			CrossSection = Highway;

			Straight(20000);


			HeightProfile =
			{
				(0.0, 5000.0, 2800),
				(3.0, 10000.0, 2800),
				(0.0, 5000.0, 2800)
			};


	#rechts sind mehrere kleine B鋟me hinter denen sich ein Dorf befindet. Hinter dem Dorf ist ein kleines Waldst點k
			LandscapeTypeRight AncientVillage
			{
				Height = (2, 3);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				AncientHouseDensity = (5, 7);
				SmallTreeDensity = (15, 10);
				MinObjdist = 50;
				MaxObjdist = 80;
			};
			LandscapeTypeExtra Forest {
				Left = false;
							
				MinObjdist=80;;
				MaxObjdist = 120;
				};
				
				LandscapeTypeExtra Hedge
			{
				
				Left=false;
				MinObjdist = 8;
				MaxObjdist = 50;
				
			};
			
			#Links ist ein Wooded-Gebiet hinter mehreren kleineren Hedgeb鋟men zu sehen
			LandscapeTypeLeft Wooded
			{
				Height = (2, 7);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				TreeDensity = 50;
				MinObjdist = 45;
				MaxObjdist = 80;
			};
			
			LandscapeTypeExtra Hedge
			{
				
				Left=true;
				MinObjdist = 8;
				MaxObjdist = 40;
				
			};
			#Gras links und rechts an der Stra遱enseite
			LandscapeTypeExtra Grassland
			{
			Left = false;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 0;
			};
			Object Grassland
			{
			Orientation = Onwards; # rechts
			YOffset = 17; # plus = rechts
			Distance = 4.5;
			Start = 0;
			};
			
			LandscapeTypeExtra Grassland
			{
			Left = true;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 0;
			};
			Object Grassland
			{
			Orientation = Towards; #links
			YOffset = -17; # plus = rechts
			Distance = 4.5;
			Start = 0;
			};
			# Deko mitte
			Object GrasslandHighway
			{
			Orientation = Onwards;
			YOffset = 0;
			Distance = 10;
			};
			LandscapeTypeExtra RoadsideBush {
			Left = true;
			MinObjdist = -17.8;
				MaxObjdist = -15.2;
			ObjDensity = 0.5;
			};

			/*Objects = {
				(environment.road.gantry_3, 150),
				("sign.G_443_3_500~Hannover~W黵zburg-~Kassel~Estenfeld~Fulda~Rimpar", 150, 7),

				(environment.road.gantry_2, 250),
				("sign.G_444_2~Hannover~Kassel~Fulda", 250, 5),
				("sign.G_444_21~W黵zburg-~Estenfeld~Rimpar", 250, 11),

				(environment.road.gantry_2, 350),
				("sign.G_443_2_750~Hannover~W黵zburg-~Kassel~Estenfeld~Fulda~Rimpar", 350, 5),

				(environment.road.gantry_3, 450),
				("sign.G_444_3~Hannover~Kassel~Fulda", 450, 7),
				("sign.G_444_22~W黵zburg-~Estenfeld~Rimpar", 450, 15)

			};*/

		};




		define Course Kurve
		{
			NodeID = 111;
			CrossSection = Highway;

			Bend(1000, 800);

			HeightProfile =
			{
				(0.0, 1000, 1000)

			};

			LandscapeTypeLeft Wooded
			{
		    Gradient = 0.1;
			GradientEnd = 0.2;
			TreeDensity = 3;
			OverlayDensity = 1;
			MaxObjdist=100;


			};
			LandscapeTypeExtra Meadows
			{
				Left=true;
				OverlayDensity = 1;
				TreeDensity = (1, 2);
				GadgetDensity = (1, 3);
				MinObjdist=100;
				MaxObjdist = 250;
				};
			
			LandscapeTypeExtra Grassland
			{
			Left = true;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 0;
			};
			Object Grassland
			{
			Orientation = Towards;
			YOffset = -17; 
			Distance = 4.5;
			Start = 0;
			};

			LandscapeTypeRight Alley1
			{
				Height = (2, 4);
				Ripple = (0.5, 1);
				Offset = (-5, -4);
				OverlayDensity = (0.7, 0.9);
				Gradient = 0.02;
				MinObjdist = 80;
				MaxObjdist = 130;
				MaxObjpos=500;
			};
			
			LandscapeTypeExtra Farmed
			{
			Left=false;
			WaySetback = (7, 2);
			OverlayDensity = 1;
			MaxObjdist = 250;
			FieldSetback = (8, 0.5); # oder: (2.7, 0)
			MaxObjdist = 80;
			MaxObjpos=500;
			
			};
			LandscapeTypeExtra Hedge
			{
			Left = false;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			MinObjpos = 500;
			};
			LandscapeTypeExtra Wooded
			{
			Left = false;

			MinObjdist = 25;
			MaxObjdist = 40;
			MinObjpos = 500;
			};
			
			
			LandscapeTypeExtra Grassland
			{
			Left = false;

			MinObjdist = 2.7;
			MaxObjdist = 25;
			};
			Object Grassland
			{
			Orientation = Onwards; # rechts
			YOffset = 17; # plus = rechts
			Distance = 4.5;
			Start = 0;
			};
			
			# Deko mitte
			Object GrasslandHighway
			{
			Orientation = Onwards;
			YOffset = 0;
			Distance = 10;
			};
			LandscapeTypeExtra RoadsideBush {
			Left = true;
			MinObjdist = -17.8;
				MaxObjdist = -15.2;
			ObjDensity = 0.5;
			};

		};

		Start			    Start;
		Kuppe				Kuppe;
		Anfahrt1			Anfahrt1;
		Anfahrt2			Anfahrt2;
		Vor                 Vor;
        Anfahrt2            Anfahrt3;
		Kurve               Kurve;
		Anfahrt2           Anfahrt4;
		Anfahrt2           Anfahrt5;


		Connections =
		{
			Port1 <-> Vor.Begin,
			Vor.End <-> Kuppe.Begin,
			Kuppe.End <-> Start.Begin,
			Start.End <-> Anfahrt1.Begin,
			Anfahrt1.End <->  Anfahrt2.Begin,
			Anfahrt2.End <-> Anfahrt3.Begin,
			Anfahrt3.End <-> Anfahrt4.Begin,
			Anfahrt4.End <-> Anfahrt5.Begin,
			Anfahrt5.End <-> Port2
		};


Traffic	Stau
##########Front Vehicle###########
		{
			Vehicle FrontVehicleFirstRow
			{
				Vehicle = Car;
				Position = (Start, 510, 5);

				Behaviourmachine =
				{
					(HazardFree, 20, 20, 5, 3, 8, -10)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Anfahrt1, 1200, 5, Traffic, TargetSpeed, 10),
			        (Anfahrt1, 1300, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt1, 1500, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt1, 1600, 5, Traffic, TargetSpeed, 16),
			        (Anfahrt1, 1800, 5, Traffic, TargetSpeed, 10),
					(Anfahrt1, 1900, 5, Traffic, TargetSpeed, 14),
					(Anfahrt1, 2150, 5, Traffic, TargetSpeed, 14),
					(Anfahrt2, 100, 5, Traffic, TargetSpeed, 10),
					(Anfahrt2, 500, 5, Traffic, TargetSpeed, 20),
					(Anfahrt2, 1200, 5, Traffic, TargetSpeed, 10),
			        (Anfahrt2, 1300, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt2, 1500, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt2, 1600, 5, Traffic, TargetSpeed, 16),
			        (Anfahrt2, 1800, 5, Traffic, TargetSpeed, 10),
					(Anfahrt2, 1900, 5, Traffic, TargetSpeed, 14),
					(Anfahrt2, 2150, 5, Traffic, TargetSpeed, 14),
					(Anfahrt3, 100, 5, Traffic, TargetSpeed, 10),
					(Anfahrt3, 500, 5, Traffic, TargetSpeed, 20),
					(Anfahrt3, 1200, 5, Traffic, TargetSpeed, 10),
			        (Anfahrt3, 1300, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt3, 1500, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt3, 1600, 5, Traffic, TargetSpeed, 16),
			        (Anfahrt3, 1800, 5, Traffic, TargetSpeed, 10),
					(Anfahrt3, 1900, 5, Traffic, TargetSpeed, 14),
					(Anfahrt3, 2150, 5, Traffic, TargetSpeed, 14),
					(Anfahrt4, 100, 5, Traffic, TargetSpeed, 10),
					(Anfahrt4, 500, 5, Traffic, TargetSpeed, 20),
					(Anfahrt4, 1200, 5, Traffic, TargetSpeed, 10),
			        (Anfahrt4, 1300, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt4, 1500, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt4, 1600, 5, Traffic, TargetSpeed, 16),
			        (Anfahrt4, 1800, 5, Traffic, TargetSpeed, 10),
					(Anfahrt4, 1900, 5, Traffic, TargetSpeed, 14),
					(Anfahrt4, 2150, 5, Traffic, TargetSpeed, 14),
					(Anfahrt5, 200, 5, Traffic, TargetSpeed, 10),
					(Anfahrt5, 500, 5, Traffic, TargetSpeed, 20),
					(Anfahrt5, 1200, 5, Traffic, TargetSpeed, 10),
			        (Anfahrt5, 1300, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt5, 1500, 5, Traffic, TargetSpeed, 12),
			        (Anfahrt5, 1600, 5, Traffic, TargetSpeed, 16),
			        (Anfahrt5, 1800, 5, Traffic, TargetSpeed, 10),
					(Anfahrt5, 1900, 5, Traffic, TargetSpeed, 14),
					(Anfahrt5, 2150, 5, Traffic, TargetSpeed, 55)
				};
			};

			Vehicle Vorderfahrzeug02_ErsteReihe
			{
				Vehicle = Truck;
				Position = (Start, 510, 6);

				Behaviourmachine =
				{
					(HazardFree, 20, 20, 5, 3, 8, -10)
				};

				Flowpoints =
				{
                    (Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,5,SimCar,Activate),
					(Anfahrt1, 1200, 6, Traffic, TargetSpeed, 10),
			        (Anfahrt1, 1300, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt1, 1500, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt1, 1600, 6, Traffic, TargetSpeed, 16),
			        (Anfahrt1, 1800, 6, Traffic, TargetSpeed, 10),
					(Anfahrt1, 1900, 6, Traffic, TargetSpeed, 14),
					(Anfahrt1, 2150, 6, Traffic, TargetSpeed, 14),
					(Anfahrt2, 100, 6, Traffic, TargetSpeed, 10),
					(Anfahrt2, 500, 6, Traffic, TargetSpeed, 20),
					(Anfahrt2, 1200, 6, Traffic, TargetSpeed, 10),
			        (Anfahrt2, 1300, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt2, 1500, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt2, 1600, 6, Traffic, TargetSpeed, 16),
			        (Anfahrt2, 1800, 6, Traffic, TargetSpeed, 10),
					(Anfahrt2, 1900, 6, Traffic, TargetSpeed, 14),
					(Anfahrt2, 2150, 6, Traffic, TargetSpeed, 14),
					(Anfahrt3, 100, 6, Traffic, TargetSpeed, 10),
					(Anfahrt3, 500, 6, Traffic, TargetSpeed, 20),
					(Anfahrt3, 1200, 6, Traffic, TargetSpeed, 10),
			        (Anfahrt3, 1300, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt3, 1500, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt3, 1600, 6, Traffic, TargetSpeed, 16),
			        (Anfahrt3, 1800, 6, Traffic, TargetSpeed, 10),
					(Anfahrt3, 1900, 6, Traffic, TargetSpeed, 14),
					(Anfahrt3, 2150, 6, Traffic, TargetSpeed, 14),
					(Anfahrt4, 100, 6, Traffic, TargetSpeed, 10),
					(Anfahrt4, 500, 6, Traffic, TargetSpeed, 20),
					(Anfahrt4, 1200, 6, Traffic, TargetSpeed, 10),
			        (Anfahrt4, 1300, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt4, 1500, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt4, 1600, 6, Traffic, TargetSpeed, 16),
			        (Anfahrt4, 1800, 6, Traffic, TargetSpeed, 10),
					(Anfahrt4, 1900, 6, Traffic, TargetSpeed, 14),
					(Anfahrt4, 2150, 6, Traffic, TargetSpeed, 14),
					(Anfahrt5, 200, 6, Traffic, TargetSpeed, 10),
					(Anfahrt5, 500, 6, Traffic, TargetSpeed, 20),
					(Anfahrt5, 1200, 6, Traffic, TargetSpeed, 10),
			        (Anfahrt5, 1300, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt5, 1500, 6, Traffic, TargetSpeed, 12),
			        (Anfahrt5, 1600, 6, Traffic, TargetSpeed, 16),
			        (Anfahrt5, 1800, 6, Traffic, TargetSpeed, 10),
					(Anfahrt5, 1900, 6, Traffic, TargetSpeed, 14),
					(Anfahrt5, 2150, 6, Traffic, TargetSpeed, 55)
				};
			};

			Vehicle Vorderfahrzeug03_ErsteReihe
			{
				Vehicle = Car;
				Position = (Start, 510, 7);

				Behaviourmachine =
				{
					(HazardFree, 20, 20, 5, 3, 8, -10)
				};

				Flowpoints =
				{
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt1, 1200, 7, Traffic, TargetSpeed, 10),
			        (Anfahrt1, 1300, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt1, 1500, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt1, 1600, 7, Traffic, TargetSpeed, 16),
			        (Anfahrt1, 1800, 7, Traffic, TargetSpeed, 10),
					(Anfahrt1, 1900, 7, Traffic, TargetSpeed, 14),
					(Anfahrt1, 2150, 7, Traffic, TargetSpeed, 14),
					(Anfahrt2, 100, 7, Traffic, TargetSpeed, 10),
					(Anfahrt2, 500, 7, Traffic, TargetSpeed, 20),
					(Anfahrt2, 1200, 7, Traffic, TargetSpeed, 10),
			        (Anfahrt2, 1300, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt2, 1500, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt2, 1600, 7, Traffic, TargetSpeed, 16),
			        (Anfahrt2, 1800, 7, Traffic, TargetSpeed, 10),
					(Anfahrt2, 1900, 7, Traffic, TargetSpeed, 14),
					(Anfahrt2, 2150, 7, Traffic, TargetSpeed, 14),
					(Anfahrt3, 100, 7, Traffic, TargetSpeed, 10),
					(Anfahrt3, 500, 7, Traffic, TargetSpeed, 20),
					(Anfahrt3, 1200, 7, Traffic, TargetSpeed, 10),
			        (Anfahrt3, 1300, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt3, 1500, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt3, 1600, 7, Traffic, TargetSpeed, 16),
			        (Anfahrt3, 1800, 7, Traffic, TargetSpeed, 10),
					(Anfahrt3, 1900, 7, Traffic, TargetSpeed, 14),
					(Anfahrt3, 2150, 7, Traffic, TargetSpeed, 14),
					(Anfahrt4, 100, 7, Traffic, TargetSpeed, 10),
					(Anfahrt4, 500, 7, Traffic, TargetSpeed, 20),
					(Anfahrt4, 1200, 7, Traffic, TargetSpeed, 10),
			        (Anfahrt4, 1300, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt4, 1500, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt4, 1600, 7, Traffic, TargetSpeed, 16),
			        (Anfahrt4, 1800, 7, Traffic, TargetSpeed, 10),
					(Anfahrt4, 1900, 7, Traffic, TargetSpeed, 14),
					(Anfahrt4, 2150, 7, Traffic, TargetSpeed, 14),
					(Anfahrt5, 200, 7, Traffic, TargetSpeed, 10),
					(Anfahrt5, 500, 7, Traffic, TargetSpeed, 20),
					(Anfahrt5, 1200, 7, Traffic, TargetSpeed, 10),
			        (Anfahrt5, 1300, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt5, 1500, 7, Traffic, TargetSpeed, 12),
			        (Anfahrt5, 1600, 7, Traffic, TargetSpeed, 16),
			        (Anfahrt5, 1800, 7, Traffic, TargetSpeed, 10),
					(Anfahrt5, 1900, 7, Traffic, TargetSpeed, 14),
					(Anfahrt5, 2150, 7, Traffic, TargetSpeed, 55)
				};
			};


			Vehicle Vorderfahrzeug5_1
			{
				Vehicle = Car;
				Position = (Start, 460, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
					#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	27, 			27, 			2, 			2.5,	    0.2, 	0.7, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	170,	NOP, 	1000, 		4,			-5,	0.1,	0.1,	4.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt1, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_1
			{
				Vehicle = Car;
				Position = (Start, 460, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                	#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	27, 			27, 			2, 			2.5,	 0.3, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	170,	NOP, 	1000, 		4,			-5,		0.1,	0.1,	4.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt1, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 7, 7, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 7, 7, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 7, 7, 0.2, 0.2)
				};
			};


			Vehicle Vorderfahrzeug7_1
			{
				Vehicle = Car;
				Position = (Start, 460, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
					#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	27, 			27, 			3.5, 		4.75,	0.2, 	0.7, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	900, 		4,			-5,		0.4,	0.2,	3.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt1, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
				    (Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug5_2
			{
				Vehicle = Car;
				Position = (Start, 410, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
                (AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	30, 			30, 			3.5, 	4.5,      0.1, 	0.9, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	 1000, 		4,			-5,		0.1,	0.1,	4.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};




				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt1, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt1, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_2
			{
				Vehicle = Car;
				Position = (Start, 410, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	30, 			30, 			4.5, 			5.5,	0.2, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.1,	0.1,	4.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug7_2
			{
				Vehicle = Car;
				Position = (Start, 410, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
					#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	30, 			30, 			2.5, 		2.75,	 0.4, 	0.6, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	1000, 		4,			-5,		0.1,	0.1,	4.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt2, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug5_3
			{
				Vehicle = CarVan;
				Position = (Start, 360, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
                (AxControl),

				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	33, 			33, 			1.5, 		1.5,  0.1, 	 0.9, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	170,	NOP, 	800, 		4,			-5,		0.1,	 0.1,	4.0, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
					};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_3
			{
				Vehicle = Car;
				Position = (Start, 360, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                	#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	33, 			33, 			1.5, 			2.75,	0.2, 	0.7, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.1,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt2, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};


			Vehicle Vorderfahrzeug7_3
			{
				Vehicle = CarVan;
				Position = (Start, 360, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
					#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	33, 			33, 			4.5, 		5.5,	0.2, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.1,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt1, 1800, 5, Traffic, AxControl, -5, 3, 3, 0.2, 0.2),
					(Anfahrt1, 1800, 6, Traffic, AxControl, -5, 3, 3, 0.2, 0.2),
					(Anfahrt1, 1800, 7, Traffic, AxControl, -5, 3, 3, 0.2, 0.2),
					(Anfahrt2, 1500, 5, Traffic, AxControl, -5, 3, 3, 0.2, 0.2),
					(Anfahrt2, 1500, 6, Traffic, AxControl, -5, 3, 3, 0.2, 0.2),
					(Anfahrt2, 1500, 7, Traffic, AxControl, -5, 3, 3, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug5_4
			{
				Vehicle = Car;
				Position = (Start, 310, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	36, 			36, 			2.5, 		2.75,	0.3, 	0.7, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_4
			{
				Vehicle = Car;
				Position = (Start, 310, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	36, 			36, 			3.5, 			4,	0.2, 	0.9, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	900, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug7_4
			{
				Vehicle = CarVan;
				Position = (Start, 310, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	36, 			36, 			1.5, 		2,	0.3, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	120,	NOP, 	1000, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt5, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug5_5
			{
				Vehicle = Car;
				Position = (Start, 260, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	39, 			39, 			2.5, 		2.75,	0.3, 	0.7, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_5
			{
				Vehicle = Car;
				Position = (Start, 260, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	39, 			39, 			3.5, 			4,	0.2, 	0.9, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	900, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug7_5
			{
				Vehicle = Car;
				Position = (Start, 260, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	39, 			39, 			1.5, 		2,	0.3, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	120,	NOP, 	1000, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt5, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug5_6
			{
				Vehicle = CarVan;
				Position = (Start, 210, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	40, 			40, 			2.5, 		2.75,	0.3, 	0.7, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_6
			{
				Vehicle = Car;
				Position = (Start, 210, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	40, 			40, 			3.5, 			4,	0.2, 	0.9, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	900, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug7_6
			{
				Vehicle = Car;
				Position = (Start, 210, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	40, 			40, 			1.5, 		2,	0.3, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	120,	NOP, 	1000, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt5, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};


			Vehicle Vorderfahrzeug5_7
			{
				Vehicle = Car;
				Position = (Start, 160, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	42, 			42, 			2.5, 		2.75,	0.3, 	0.7, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_7
			{
				Vehicle = Car;
				Position = (Start, 160, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	42, 			42, 			3.5, 			4,	0.2, 	0.9, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	900, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug7_7
			{
				Vehicle = CarVan;
				Position = (Start, 160, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	42, 			42, 			1.5, 		2,	0.3, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	120,	NOP, 	1000, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt5, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug5_8
			{
				Vehicle = CarVan;
				Position = (Start, 110, 5);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	44, 			44, 			2.5, 		2.75,	0.3, 	0.7, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	1500, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt4, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug6_8
			{
				Vehicle = Car;
				Position = (Start, 110, 6);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
                #		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	44, 			44, 			3.5, 			4,	0.2, 	0.9, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	170,	NOP, 	900, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt3, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt3, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt2, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt4, 1850, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

			Vehicle Vorderfahrzeug7_8
			{
				Vehicle = CarVan;
				Position = (Start, 110, 7);

				Behaviourmachine =
				{
                (LateralDistance, -0.1,-0.8,0,2),
				(AxControl),
				#		StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
				#			1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
				(EXWDM, 	44, 			44, 			1.5, 		2,	0.3, 	0.8, 	0.9,	0.1,	0.05,	NOP, 	NOP,	0.08, 	120,	NOP, 	1000, 		4,			-5,		0.2,	0.1,	3.5, 	0,				    100,				1000,					3000,					2,							10,		5,					1.0,			0.0,			2.0)
				};

				Flowpoints =
				{
					(Kuppe,200,5,SimCar,Activate),
					(Kuppe,200,6,SimCar,Activate),
					(Kuppe,200,7,SimCar,Activate),
					(Anfahrt5, 1250, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1250, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 5, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 6, Traffic, AxControl, -5, 5, 5, 0.2, 0.2),
					(Anfahrt5, 1550, 7, Traffic, AxControl, -5, 5, 5, 0.2, 0.2)
				};
			};

	TrafficFlow Gegenverkehr
			{
				Source GegenSpur1
				{
					Position =(SimCar, -900, 1);

					Vehicles =
					{
						(1, Car, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Van, (HazardFree, 25, 33, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Truck, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Truck, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Truck, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Van, (HazardFree, 25, 33, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Truck, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Truck, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Truck, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 33, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 33, 5, 1, 10, -14))
					};

					Parameters = (Gauss, 1,1, 200,300);
				};

				Drain GegenSpur11
				{
					Position = (SimCar, 920, 1);
				};

				Flowpoints=
				{
					(Kuppe, 20, 4, SimCar, ActivateSource, (GegenSpur1)),
					(Kuppe, 30, 4, SimCar, ActivateDrain, (GegenSpur11)),
					(Kuppe, 20, 5, SimCar, ActivateSource, (GegenSpur1)),
					(Kuppe, 30, 5, SimCar, ActivateDrain, (GegenSpur11))
					#(FreieFahrt, 2300, 1, SimCar, DeactivateSource, (GegenSpur1))
				};

			};

		TrafficFlow Gegenverkehr
			{
				Source GegenSpur2
				{
					Position =(SimCar, -900, 2);

					Vehicles =
					{
						(1, CarVan, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Van, (HazardFree, 25, 38, 5, 1, 10, -14)),
						(1, CarVan, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Van, (HazardFree, 25, 38, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, CarVan, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 1, 10, -14))
					};

					Parameters = (Gauss, 2,1, 351,350);
				};

				Drain GegenSpur22
				{
					Position = (SimCar, 1200, 4);
				};


				Flowpoints=
				{
					(Kuppe, 20, 4, SimCar, ActivateSource, (GegenSpur2)),
					(Kuppe, 30, 4, SimCar, ActivateDrain, (GegenSpur22)),
					(Kuppe, 20, 5, SimCar, ActivateSource, (GegenSpur2)),
					(Kuppe, 30, 5, SimCar, ActivateDrain, (GegenSpur22))
				};

			};
		TrafficFlow Gegenverkehr
			{
				Source GegenSpur3
				{
					Position =(SimCar, -900, 3);

					Vehicles =
					{
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Van, (HazardFree, 25, 38, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Van, (HazardFree, 25, 38, 5, 1, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 4, 10, -14)),
						(1, Car, (HazardFree, 25, 38, 5, 1, 10, -14))
					};

					Parameters = (Gauss, 2,1, 351,350);
				};

				Drain GegenSpur33
				{
					Position = (SimCar, 1200, 4);
				};


				Flowpoints=
				{
					(Kuppe, 20, 4, SimCar, ActivateSource, (GegenSpur3)),
					(Kuppe, 30, 4, SimCar, ActivateDrain, (GegenSpur33)),
					(Kuppe, 20, 5, SimCar, ActivateSource, (GegenSpur3)),
					(Kuppe, 30, 5, SimCar, ActivateDrain, (GegenSpur33))
				};

			};

	TrafficFlow Verkehr_hinten
		{
			Source Verkehr_hinten
			{
				Position = (SimCar, -800, 6);

				Vehicles = {
					#EXWDM 				StartSpeed, 	TargetSpeed, 	MinDistF, 	THWF, 	ZF1, 	ZF2, 	ZF3, 	ZF4, 	NZF, 	CX, 	EX, 	BNULL, 	DMAX, 	BR, 	TimeStep, 	ACCMax, 	ACCMin, 	p, 		athres, bsave, 	BiasRight,		 	WaitForBlinktime,	LaneChangeBlinkTime, 	LaneChangeWaitTime,		LaneChangeMinSpeedDiff,		LCD, 	LaneChangeNLDist,	MOBILEnable, 	AngerEnable,	MinScanTHW
					#					1				2				3			4		5		6		7		8		9		10		11		12		13		14		15			15,			-17,		18		19		20		21					22					23						24						25							26		27,					28				29				30
					(35, Car, (EXWDM, 	28, 			28, 			2.0, 			2.5,	   0.3, 	0.8, 	0.9,	0.1,	0.1,	NOP, 	NOP,	0.08, 	120,	NOP, 	1000, 		4,		-5,		0.2,	0.2,	2.0, 	0.4,				100,				1000,					6000,					4,							10,		5,					1.0,			0.0,			2.0))
				};

				Parameters = (Gauss, 1.7, 1.5, 20, 512);

				Mode = timeedistance;
				SetupMinDist = 10; #nach dem letzten aufgesetzten Fahrzeug wird erst dann ein weiteres Fahrzeug aufgesetzt, wenn das erstere dem SimCar Xm n鋒er gekommen ist.
			};

			Drain Verkehr_hinten
			{
				Position = (SimCar, 2000, 1);
			};

			Flowpoints = {
				(Vor, 200, 4, SimCar, ActivateSource, (Verkehr_hinten)),
				(Vor, 300, 4, SimCar, ActivateDrain, (Verkehr_hinten))
			};
		};
	};
};
